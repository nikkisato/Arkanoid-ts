{"version":3,"sources":["view/CanvasView.ts","sprites/Ball.ts","sprites/Paddle.ts","Collision.ts","setup.ts","sprites/Brick.ts","helpers.ts","index.ts"],"names":[],"mappings":";;AOAA;;AACA;;AAEA;AJGA,AGNA,AFAA,AHEA,AIAA,AHAA,AFEA,IGEA,AFJA,AIAA,AHAA,AFEA,ICFA,CIAA,CHAA,GCIA,CHFA;AGEA,AIFA,ANFA,AIAA,AHAA,AFEA;AGEA,AGLA,AFAA,AHCA,AIAA,AHAA,AFEA,YGEA,AFJA,AIAA,AHAA,AFEA;AGEA,AICA,ANDE,AIDA,AHEA,AFIA,WGLF,AFAE,AIDA,AHEA,AFIA,ICLA,CACE,AIFF,CACU,AHCV,CACU,ECFZ,CFAE,ADKA,CAAY,CGLd,AFGY,ACFV,CCgDD,CD9CW,EGJV,EAEU,EJDV,CDKA,CCDU,CDCoB,EEJ9B,EAGU,EGLV,CJCA,CIEU,CJGR,KALF,EAKe,AINf,AHEA,EGEU,AHEA,QAJV,EAKE,CGPF,EAKE,EHHF,EAKe,CGPf,EAKe;ADRjB,AHOY,AIHA,AHCV,AFKE,QELF,CDEU,AIHA,ALMH,IELP,EFKE,CELF,CDEU,CDGM,CKNN,CJGA,ACFV,EGDU,ILMc,CAAC,CCHf,IIHA,QLMM,CAAuB,UAAvB,CAAd;AGLF,AICF,ANEY,AIHA,ALMR,EGNF,OFGU,AIHA,ALMH,EGNP,CAAA,IHME,CCHQ,EDGO,CCHP,AIHA,CFAV,CAAA,CEAU,CLMY,ICHZ,EDGO,CAAY,GKNnB,IFAV,GAAA,AHMiB,CAAuB,IAAvB,CAAf,IGNe,IAAjB,EAA6B,KAA7B,EAAyC;AACvC,ACLJ,AHCU,AIIE,AHAA,AFMR,QGLE,CFLI,AIIE,AHAA,AFMH,GGLC,CAAC,CDDC,ECCN,CAAS,AEDH,AHAA,CCCN,AFLI,EIIE,CFCO,AFLqB,ADUpC,CENQ,EFMY,CCVoB,CEKpB,CAAC,CEDb,EFCO,AFLqB,CEKX,CAAV,AFLT,ADUsB,CAAC,EGLA,KAAK,CAAC,KAAjC,AHKkB,CAAuB,GGJzC,IAAI,CAAC,AHIa,CAApB,EGJE,CAAS,CAAT,GAAa,IAAI,CAAC,KAAlB,GAA0B,KAAK,CAAC,GAAN,CAAU,CADpC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,KAAK,CAAC,GAAN,CAAU,CAAV,GAAc,KAAK,CAAC,MAFjC,IAGA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,GAA2B,KAAK,CAAC,GAAN,CAAU,CAJvC,EAKE;AACA,AIHN,ANEK,AIJO,AHAA,AFMR,SCFM,AIJE,AHAA,AFMH,IGDI,CHCT,GGDE,AFDD,ADEY,GCFI,AIJT,AHAA,GGAA,AHAA,EFMa,CAAC,ECFtB,EACG,IILK,AHAA,CDKA,IDCK,CAAuB,GCDjC,GAAgB,EDCN,CAAb,KCFA,EAEG,KAAK,KAAL,GAAa;AEAf,ACXL,AHYQ,AIbE,AHOE,AFMR,MCAI,CAAC,EAAE,AIbD,AHOE,AFMH,IAAL,CCDgB,EDCJ,GKbN,EHOE,CGP6B,EHO7B,AFMY,CAAC,CKboB,KAAJ,EAA/B,GHOE,EFMI,CAAuB,OAAvB,CAAZ;AOMJ,ANLQ,AILJ,AHDQ,AFMT,MCAK,CAAC,EAAE,AILF,AHDG,CDMA,OCNA,EGCR,CHDQ,EGCU,MHDV,IGCR;AFIA,AFDgB,AIFhB,AHVM,KDUN,IIAK,AHVC,ECaC,KAAP,IEHA,AHVM,GGUa,AHVmB,IAAI,KAAJ,EGUtC,AHVM;ACcP,AFEC,AILA,ALIF,EAAA,CGXA,CADF,CAYE,IFCO,AILA,GLIP,CAAA,IKJE,CJKA,CAAe,CILC,EJKhB,ADDF,CAAA,ECCuB,GILrB,ALIF,ECCE,CDDF,YAAA;AIZF,AHcG,AILC,AHyCF,SGzCO,AHyCP,WGzCE,AHyCF,GGzCqB,AHyCP,UAAC,CGzCb,AHyCY,EAAiB;AKnDjC,AHEA,ACSI,AHyCA,SGzCK,CHyCD,CAAC,CAAC,IAAF,GGzCJ,CAAgB,CHyCD,EGzCf,GAAsB,KAAtB,CHyCI,IAA0B,CAAC,CAAC,GAAF,KAAU,WAAxC,EAAqD,KAAI,CAAC,QAAL,GAAgB,KAAhB;ACtCvD,AITF,AHFA,AHeE,AINC,AHyCC,AFvCA,EGAF,AFIA,EGfI,CJWF,EAAA,CCIF,CAAA,CGfU,AFkDJ,AFvCJ,CGAF,ADuCO,CCvCP,ADuCQ,CElD+B,EJWhC,CEuCD,KCvCN,ACX+C,AFkD9B,CCvCjB,ACXgD,AJW9C,CCIF,CAAI,IAAA,ADJU,CCIV,GDJF,CEuCI,EElDiC,CAAuB,AJWhD,CEuCmB,CDnCjC,ACmCkC,AFvCpB,CGAd,ADuCmC,CDnC/B,EEJJ,ADuCiC,CFvCnB,ICId,ACmC2C,CElDJ,AJWzB,CIXhB,AHeW,ADJP,EITJ,CDSoB,AHAJ,IGAd,CHAc,CGAgB,AHA5B,CEuCA,EACE,AFxCU,EAAA,CGAd,AHAgB,EGA6B,ADwCrC,CAAC,MFxCK,CAAY,CAAZ,CEwCV,CFxCyB,CAAf,CEwCO,CFxCW,IEwC5B,CFxCiC,MAAL,CAAY,KAA9B,EAAqC,KAAK,MAAL,CAAY,MAAjD,CAAZ;AGAF,AIEF,ANCE,ACsCC,AFxCA,GAFD,EEsCA,GCrCA,KAAA,GAAA,IAAA;AIKF,AHbO,ACSL,EAAA,EEIE,AHbS,ICSX,CJGA,AIHA,GEIU,GAAG,EHbW,GGa1B,AHb6B,EAAtB,CCSL,CJGA,AIHI,KAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;AFAP,AIKJ,ANDI,AILF,AH0CA,AFvCA,EAAA,EOGE,IJLI,CIKC,ALoCP,GKpCU,APHV,COGF,ANDW,ADFT,IGFe,CFID,EEJI,EDyClB,AFvCA,CAAA,EGFE,ADyCc,CDrCd,SCqCe,CAAD,EAAiB,AFvCjC,GAAA,UAAgB,aAAhB,EAAyD;AGDvD,AGTE,AFAC,AHaJ,ACqCC,AFxCF,IGDE,ACTS,CHWF,GDDT,CMVc,ADQd,CFCQ,ADyCF,CCzCG,ADyCF,CAAC,CFxCR,CIVqB,EFkDf,AFxCN,CIVwB,CDStB,CAAe,ACTZ,CJUL,CMVI,AJkDa,GIlDS,ADQ1B,KFCkB,GDyCZ,ECzCW,EAAQ,ADyCO,CCzCf,ADyCgB,CAAC,CCzCR,EDyCM,KAAU,WAAxC,EAAqD,KAAI,CAAC,QAAL,GAAgB,IAAhB;ACxCnD,AGTJ,ACcF,AFNI,AH0CA,SIlDK,ACcA,CJLC,ADyCF,CAAC,CAAC,CG1CC,EFCG,CAAC,ADyCP,EG1CQ,EEMhB,CAAqB,ANJV,ACwCQ,CIlDJ,GCcf,EAAqC,CDd5B,ADQL,CCRkB,GHSZ,CAAsB,ADyCxB,ICzCE,ADyCyB,CAAC,CCzCE,AGTf,AJkDc,GIlDf,AJkDa,ECzCzB,AGTkB,CHStB,EAAwC,ADyCD,IIlDvB,EAAe,CAAf,EAAgB,GJkDlC,EACE,KAAI,CAAC,SAAL,GAAiB,IAAjB;ACzCE,AGTJ,ACcF,AHfK,ACSJ,AH2CA,EKrCD,EHfW,CCOF,AHyCT,CKjCI,CAAC,CJLC,AGTE,GAAG,CHSD,CAAC,CGTG,AFDO,CGerB,CAAc,CHfU,CECN,CAAC,AFDd,KECS,CAAW,CAAC,CAAC,CCc3B,CJLM,CGTwB,CAAL,IAAU,iBAArB,CAAZ;AACA,ACcF,ANNS,EMMT,CNNA,KKRQ,ECcA,CDdG,ECcA,CDdG,CAAC,GAAG,ACclB,GFTS,cCLP;AHSI,AGPJ,ACaH,AHhBM,AHaL,ACbE,AFSA,ECIF,EGbW,CJST,EAAA,CMNM,ALUR,CKVS,ALUT,ACbO,CFSL,EGCQ,AGPE,EJHV,CFSK,EGCQ,ACVS,AFAT,CCUC,ECVW,AJSzB,CITG,CFAH,CDaF,CEHU,AFGN,EDJQ,ECIR,CEHuB,AFGvB,CEHE,AHDJ,EGC4B,EHDlB,CMNgB,CNMhB,EMNmB,ALU/B,EAAI,CDJQ,CMNuB,INMvB,CAAV,CCIF,EAAU,ADJE,KAAA,CAAV,GAAU,EAAA,CAAE,CMNmC,eNMrC,CAAmB,IMNA,CAA7B,ENMU,EAA4B,YAAA;AGEhC,AGPN,ADEO,AHLP,AFQ4C,GKH9C,KCFQ,CAAC,ALST,ACZO,CCUC,EGPI,CNKkC,GGEhC,CAAC,GDVb,GCUM,ADVa,CCUC,AFEtB,CEFQ,CHFmD,CGElC,AHFmC,CGEpD,IHFmD,CAAb,CER5C,CIG0B,GAAG,IAAI,sBAAe,oBAAnB,CAA7B;AHQK,AGNL,ACYJ,AHjBO,AHaH,AIJF,AHRE,AFO+D,EKCjE,EDTW,CJQC,CAAV,EMHI,ADIN,CFAM,AIQC,AFRP,AHRO,IDYE,EEFI,AGNA,AFLS,GAAG,AHaX,CMIhB,CDZoB,ACYA,CDZhB,AJJA,EIImB,ADIrB,CEQF,AHjBiC,ACS3B,AHRkB,EKgBY,ANJhC,CGZA,ECQE,CCJwB,ADIxB,CDRE,CAAC,CEIc,GJJnB,CEAA,CAAW,CAAC,ACQd,EAAI,IDRgB,CAAC,GCQrB,EDRc,ACQJ,GDRmB,aAAa,GAAG,CAAhC,IAAqC,UAAhD,IAA8D,aADjC,GAE7B,GAFG;ADYG,AGLN,ACWF,ANJC,ACZC,AFOD,EOSD,CPXA,ECKU,CMMN,CAAC,EFTL,AHPO,CCUC,CGLN,IHKW,AIMb,CJNc,AIMA,CLhBZ,GAAgB,ECUV,EEHR,CCFE,CHKsB,AGJjB,CHIC,AIMR,CLhBE,CIKA,EACQ,CACN,IAAI,YAAJ,CACE,kBADF,EAEE,mBAFF,EAGE;AHCC,AGDC,ACOR,AHhBK,ACOH,AHPA,EKgBF,EHhBW,EESH,CAAC,EAAA,AJTF,CISD,ACOE,GAAG,AFTF,GDPc,EGgBvB,AFTc,AHPZ,CEAwB,EHShB,ACTS,IEAa,CFA9B,EECA,CCMA,GDNI,CAAC,KAAL,CAAW,CAAC,MAAM,CAAC,MAAP,GAAgB,aAAa,GAAG,CAAjC,IAAsC,UAAjD,IAA+D,aADjC,GAE9B,EAFG;AESM,ACQZ,AFTE,AHPC,AFOF,EAAA,GKFU,CCGC,CAAC,EAAA,AJRL,GFOP,CAAA,IEPE,GAAgB,EFOlB,CAAA,EEPE,OFOF,GAAA,UAAU,KAAV,EAAuB;AGGjB,AGFA,AFND,AHMK,ACPR,AFOA,GCAF,CGNW,CEGP,EAIE,CHCA,AHFA,CEPC,IFOI,GINY,CDQR,ECRW,CDQR,ADThB,CGIQ,AHJS,CECd,EDQC,ADTJ,CFOA,EMCiB,AJRM,AFOA,KEPvB,AFO4B,CEff,CIgBT,AJNJ,CIEE,EAKE,ONFmB,CAAkB,SAAlB,GMEN,ANFoC,KAAK,CAAC,CMEvD,CALF,CADM,CADR,CAAA,GNKqD,EAA9B;AGGpB,AGEJ,ACKH,ANNE,ADHC,ECGD,CKlBO,ANaP,EMMG,EAnBI,CAAP,ALkBA,CMMO,ANNP,QMMF,CACE,IADF,CNNE,CMQA,ANRI,IAAA,CAAA,CMMN,EAGE,MAHF,ANNE,EMUA,ANVI,IMMN,CNNE,CMWA,CNXO,QMMT,EAKsB;AJXjB,AGEJ,ACWC,AHtBK,ACEK,AHAR,EKoBF,CFpBA,CDFW,AFET,CCHA,CIuBE,CAAC,ENbL,GMaA,ALpBU,CAAC,IEFa,GAAG,EAAtB,EHSL,KCPE,CAA0B,SAA1B,EAAqC,KAAK,aAA1C;ACQA,AIaF,ANbE,AIJF,AHHE,AFIF,EOgBA,AFjBA,ALCA,EEJE,EKoBE,CAAC,CFjBL,CAAA,EFIS,CDPC,AFIV,CCGS,ACPE,AFIX,IOgBA,CAAgB,ANbF,EEAZ,EHHF,CKDA,ALCA,COgBA,AFjBI,EJIF,GIJE,AHHF,CGGE,AHHwB,CFI5B,GAAA,GEJE,EGGF,AHHqC,EGGjC,GHHsC,AFIjC,EKDT,EAAO,ALCP,EAAqB,KEJnB;ACQD,AIaD,AHvBK,AHUJ,ACPA,AFIC,EOgBF,CJ3BA,CCIW,CHQJ,CMeH,CAAC,CPhBC,CKFN,ILEW,IOgBX,AHvBwB,AJOtB,COgBc,CPhBC,CIPU,GAAtB,CGuBL,AFlBA,ALEsB,IAAL,CAAU,SAAV,GAAsB,IAAtB;AOiBjB,AFlBE,ALED,EOgBD,CPlBA,GOkBI,CAAC,MFlBI,IEkBT,CAAgB,AFlBF,GJEP,CMgBP,EALoB,CAOpB,CFpBE;AFMF,ACXK,ACMJ,AHDD,ECMA,ADNA,EELW,CCIJ,GHCP,CAAA,ECMA,CAAA,ICXuB,GAAG,EDW1B,ACXK,CDWL,CDNA,CAAI,MAAA,CAAA,SCMJ,ADNA,EAAI,CCMJ,MDNA,EAAS,ECMU,IAAnB,EAA+B,MAA/B,EAA+C,IAA/C,EAA+D;AAC7D,AIcF,ANnBO,ACHP,AFIA,EOkBA,APlBA,CCDA,GMmBI,CAAC,KPlBL,CAAA,EOkBA,GARoB,CAUpB,EFxBO,CLIP,CAAA,UAAA,GAAA,UAAW,KAAX,EAAuC;AGKrC,ACZG,AHUL,EAAA,EGVW,IDaP,AFHJ,CAAA,ACNA,GCSQ,CAAC,CCbY,EDajB,CAAS,ACbW,CDapB,ACbC,GDaY,EFHjB,CAAI,ACNJ,CCSqB,CAAC,EFHlB,CAAA,EEGA,GAA0B,IFH9B,EEGoC,AFHhC,CEGiC,GAAP,CAAW,CAArC,CFHJ,EAAS,CEIL,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,MAAM,CAAC,KADnC,IAEA,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,MAAlB,KAA6B,MAAM,CAAC,GAAP,CAAW,CAH1C,EAIE;AACA,AIWJ,AFzBO,AHEL,GGFF,GFcI,AIYD,GNnBH,CEOQ,CAAC,CIYA,CAAC,ALxBD,KAAK,MDKd,CMmBG,EJZC,EIYsB,ALxBxB,MKwB8B,CAAC,GAAP,CAAW,CAAX,GAAe,CAAvC,IACC,MAAM,CAAC,aAAP,IAAwB,MAAM,CAAC,GAAP,CAAW,CAAX,GAAe,IAAI,CAAC,MAAL,CAAY,KAAZ,GAAoB,MAAM,CAAC,KAFrE,EAGE;AJbC,AIcD,AH/BG,AHUH,AIJF,AHDC,AFEC,EKDF,EEyBE,AH/BS,CDSoD,ADNtD,CCgBP,EEbF,ALCM,CKDN,ALCO,COwBC,CAAC,EH/BW,AHUX,CDHP,EIPqB,AJOT,EIPT,AHUS,GMqBZ,EFzBF,CAAI,GJIF,EIJE,CAAA,SAAJ,EAAI,OAAJ,EAAS;AE0BR,ANrBA,ADHC,IAAA,CCCO,IIHT,ELES,CAAC,GAAR,CAAY,KELL,CFKP,EKFF,ALEsB,KAApB;AIPG,ACMH,ALEA,IIRS,CJQT,EAAA,GAAA,GKFO,EDNa,AJQf,GIRkB,ACMX,GDNT,AHQI,CDAP,MKFA,ALEY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,SAAF,CACV,KAAK,CAAC,KADI,EAEV,KAAK,CAAC,GAAN,CAAU,CAFA,EAGV,KAAK,CAAC,GAAN,CAAU,CAHA,EAIV,KAAK,CAAC,KAJI,EAKV,KAAK,CAAC,MALI,CAAZ;AGWA,AIaF,AFzBC,AHLQ,AFaR,EOiBD,CL9BA,AFGA,EKAS,GFcH,GIaG,CJbC,AIaA,CJbC,GAAL,CAAS,CAAT,GAAa,IAAI,CAAC,IIaxB,CAA6B,CJbV,CAAY,EIa/B,EAAmC,CJbhB,GAAoB,EIavC,EJb2C,AIaA,CJbC,GIa5C,EJbM,IAA+C,IAAI,CAAC,GAAL,CAAS,CAAT,GAAa,CAAhE,EAAmE;AACjE,AIaJ,AHhCK,AHOI,ACFT,EAAA,CDEA,CGPW,CH1Bb,CE6CM,AIaE,ANrBN,ECNA,CAAA,CCcQ,CAAC,ICnBa,GAAG,EGgCL,CHhCf,ACII,EE4Bc,AL3BvB,CAAI,GCcA,GDdA,CAAA,CK2B4B,CAAC,OL3BjC,EAAI,QK2BmB,AL3BvB,CK2BmD,CL3BzC,GK2Ba,EAAkC,MAAlC,CAAvB;AJZG,AHLH,EAAA,GGR+D,CAe7D,GDjBF,GFUA,CAAA,SAAA,CAAA,CEVA,SFUA,GAAA,UAAW,MAAX,EAA0B;AOmB1B,AHhCK,AHUL,AIRS,AHEP,AFSF,ECHA,CIRA,CDFW,EGgCP,ANtBJ,CAAA,CDGA,KETS,AFST,GIbuB,AHUvB,ADGA,CCHA,CCNc,CEJuC,CGgCrD,APnBA,EOmBoB,QL5BlB,GDMF,GAAA,YAAA;AMuBE,AHhCF,AHUE,AILF,AHDC,EGCD,EE2BE,CHhCC,AFEO,GGGV,CE2BO,ANtBA,AILP,IE2BW,CAAT,ANtBA,CAAW,CAAX,GAAe,CAAC,EGXmC,CCMrD,CAAI,CJKmB,IILnB,CJKc,AILd,CJKyB,CAA3B,OILF,EAAI,QAAJ,EAAU;AFeR,AIaA,AHhCF,AHUC,ADEC,GCJF,CMwBE,APpBA,CIZC,GDmBG,AIaA,CAAC,AF5BP,CLQQ,CAAC,CGOC,CAAC,GAAL,CAAS,CAAT,AIaJ,APpBA,COoBe,APpBA,EGOE,ADlBT,CCkBR,EAAoB,AIapB,AHlCmD,ACMrD,KLQiB,KAAA,EAAK;AGQlB,AIaH,AHhCD,ACIE,ALOwB,KIXvB,CDmBC,IAAI,CAAC,EEfA,ALOiB,KKPZ,ALOgB,CAAC,MIdsB,EDsBjD,EEfF,ALOwB,CAAgB,KAAhB,CAAA;AGSvB,ACnBH,AHUA,AINC,AHLS,AFWsC,ECAhD,CCXA,EECG,ACEO,ALQR,CCAF,CAAA,SAAA,CAAA,MGdqD,UHcrD,GAAA,YAAA;AEUC,AIYD,AH/BA,AHUE,AILF,AHHA,AFQC,EOqBD,AL7BA,CCFA,AHQA,EIRG,GFEH,CDQO,ACRP,KDQE,CAAW,CAAX,GAAe,CAAC,GMqBG,AL7BrB,CK6BsB,AL7BlB,CDQmB,KAAL,ACRd,CDQyB,ACRzB,CDQF,IMqBoB,IL7BtB,EAAI,KAAJ,EAAO;AK6BqB,AHpCyB,AHgBpD,CGhBI,EHcL,MIHA,AHJA,EK6B4B,QAAQ,CAAC,EFzB1B,EEyByB,AL7BpC,EK6B2C,EFzB3C,EAAyB,EEyBW,EAAe,MAAf,EAAuB,IAAvB,EAA6B,SAA7B,CAAR;AJX9B,AIW6E,AFxBzE,AHJA,AFQJ,GOoBuB,CAArB,KJXF,AHTA,EKJS,EHJE,KCiBX,ADjBgB,CFQhB,GKJI,GAAmB,CHJnB,KGIA;AFpCJ,AI6DC,AH7BM,AHUL,AILC,AHJA,AFnCH,CGEA,AHFA,CC4CE,CE1CF,AHFA,CIkCa,CCFD,AHCH,CDWP,CAAA,SGVuB,AHUvB,CAAA,EGVqD,MHUrD,GAAA,YAAA;AGTA,AHUE,KGVC,CADkD,GHW9C,GAAL,CAAS,CAAT,GAAa,IIbL,AHCH,CDYa,GAAL,CAAS,CAAT,GAAa,KAAK,KAAL,CAAW,CAArC;AMoBJ,AH7BE,AHUE,KGVC,CAFkD,GG+B9C,ANnBA,GAAL,CAAS,CAAT,GAAa,CMmBjB,CAAmB,GNnBG,CMmBtB,EAAmC,ANnBlB,CAAS,CAAT,GAAa,KAAK,KAAL,CAAW,CAArC;AMoBF,AH7BA,AHUC,AIfS,AHCH,GDWP,AIZA,AHCA,EEIG,CAHkD;AGiCrD,AH7BA,ACEF,AHJE,EK+BA,AL/BA,GEEG,CAJkD,CGiChD,CL/BL,CGIF,AHJE,CK+BQ,CAAR,GF3BF,SHJE,CAAI,MAAA,CAAA,SAAJ,EAAI,OAAJ,EAAS;AKgCT,AH7BA,AHSF,AIlDA,CAAA,CEsEE,CFtEF,EDyCK,CG6BC,AHlCiD,CGkChD,AH7BA,EHSP,ACZE,IDYF,EMoBE,CAAc,EAAd,MLhCA;AKiCA,ANvEF,ACuCI,CDvCJ,CMuEE,CNvEF,GMuEM,CAAC,MLhCI,GKgCT,CAAe,CAAf,ALhCc,EK4BmB,CAKjC,QLjCE;AEHmD,AFIpD,CEJI,EAQP,EFNW;AKmCT,MAAM,SAAS,GAAG,GLnCT,CKmCa,oBAAJ,EAAlB;AACA,MAAM,MAAM,GAAG,4BAAf;AACA,AH9BK,AFPI,GAAT,CEOW,EG8BL,GH9BU,CG8BN,EH9BS,CG8BN,AH7Bb,CADmB,EAChB,CG6Bc,AH9BE,EACb,CADa,EACV,CADU,EACP,CADO,CG8BN,CACX,AH9Ba,CADI,EACD,CADC,EACE,CADF,EACK,CADL,EACQ,CADR,EAEnB,CAFmB,CG8BN,CH5BV,CG8BD,AHhCiB,EAEb,CAFa,EAEV,CAFU,EAEP,CAFO,EAEJ,CAFI,EAED,CAFC,CG8BN,CH5BQ,CG+BnB,AHjCiB,EAEK,CAFL,EAEQ,CAFR,EAGnB,CAHmB,EAGhB,CAHgB,EAGb,CAHa,EAGV,CAHU,EAGP,CAHO,EAGJ,CAHI,EAGD,CAHC,EAGE,CAHF,EAGK,CAHL,EAGQ,CAHR,EAInB,CAJmB,EAIhB,CAJgB,EAIb,CAJa,EAIV,CAJU,EAIP,CAJO,EAIJ,CAJI,EAID,CAJC,EAIE,CAJF,EAIK,CAJL,EAIQ,CAJR,EAKnB,CALmB,EAKhB,CALgB,EAKb,CALa,EAKV,CALU,EAKP,CALO,EAKJ,CALI,EAKD,CALC,EAKE,CALF,EAKK,CALL,EAKQ,CALR,EAMnB,CANmB,EAMhB,CANgB,EAMb,CANa,EAMV,CANU,EAMP,CANO,EAMJ,CANI,EAMD,CANC,EAME,CANF,EAMK,CANL,EAMQ,CANR,CAAd;AGiCD,ALpCJ,EAAA,EKoCI,CAAC,EAAE,CLpCP,CAAA,cAAA,CAAI,CKoCF,KLpCE,CAAA,SAAJ,EAAI,cAAJ,EAAgB;AKoCI,IAAA,CAAC,EAAE,ELpCvB,eAAA;AKoCE,ALnCA,GKgCW,EAIX,QLpCO,KKgCI,ALhCC,CKgCd,OLhCE;AKuCF,ALtCC,KAFe,CKwCV,MAAM,GAAG,IAAI,cAAJ,CACb,mBADa,EAEb,mBAFa,EAGb,oBAHa,EAIb;AACE,IAAA,CAAC,EAAE,cL7CS,MK4Cd;AAEE,IAAA,CAAC,EAAE,IAAI,CAAC,MAAL,CAAY,MAAZ,GAAqB,oBAArB,GAAqC;AAF1C,AL5Cc,GKwCD,ALxCf,EKgDE,eARa,CAAf;AAUA,AL/CA,EK+CA,AL/CA,MAAA,CAAA,CK+CQ,CAAC,IAAD,EAAO,MAAP,AL/CR,CAAI,CK+CmB,KL/CnB,CK+CI,AL/CJ,EK+C2B,IAAvB,EAA6B,CL/CrC,EAAI,MK+CI,CAAR,QL/CA,EAAiB;AKgDlB,EAED,OLlDE,eAAA;AACE,aAAO,KAAK,SAAZ;AACD,KAFgB;AKmDnB,IAAM,IAAI,GAAG,IAAI,MLnDE,gBKmDN,CAAe,YAAf,CAAb;AACA,IAAI,CAAC,eAAL,CAAqB,SAArB;ALpDmB,GAAjB;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,QAAI,KAAK,QAAT,EAAmB,KAAK,GAAL,CAAS,CAAT,IAAc,KAAK,KAAnB;AACnB,QAAI,KAAK,SAAT,EAAoB,KAAK,GAAL,CAAS,CAAT,IAAc,KAAK,KAAnB;AACrB,GAHD;;AAeF,SAAA,MAAA;AAhEA,CAAA,EAAA","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["import { Brick } from '~/sprites/Brick';\nimport { Paddle } from '~/sprites/Paddle';\nimport { Ball } from '~/sprites/Ball';\n\nexport class CanvasView {\n  canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D | null;\n  private scoreDisplay: HTMLObjectElement | null;\n  private start: HTMLObjectElement | null;\n  private info: HTMLObjectElement | null;\n\n  constructor(canvasName: string) {\n    this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\n    this.context = this.canvas.getContext('2d');\n    this.scoreDisplay = document.querySelector('#score');\n    this.start = document.querySelector('#start');\n    this.info = document.querySelector('#info');\n  }\n  clear(): void {\n    this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  initStartButton(startFunction: (view: CanvasView) => void): void {\n    this.start?.addEventListener('click', () => startFunction(this));\n  }\n\n  drawScore(score: number): void {\n    if (this.scoreDisplay) this.scoreDisplay.innerHTML = score.toString();\n  }\n  drawInfo(text: string): void {\n    if (this.info) this.info.innerHTML = text;\n  }\n  drawSprite(brick: Brick | Paddle | Ball): void {\n    if (!brick) return;\n    console.log('here', brick);\n    this.context?.drawImage(\n      brick.image,\n      brick.pos.x,\n      brick.pos.y,\n      brick.width,\n      brick.height\n    );\n  }\n  drawBricks(bricks: Brick[]): void {\n    bricks.forEach(brick => this.drawSprite(brick));\n  }\n}\n","import { Vector } from '~/types';\n\nexport class Ball {\n  private speed: Vector;\n  private ballImage: HTMLImageElement = new Image();\n\n  constructor(\n    speed: number,\n\n    private ballSize: number,\n    private position: Vector,\n    image: string\n  ) {\n    (this.ballSize = ballSize),\n      (this.position = position),\n      (this.speed = {\n        x: speed,\n        y: -speed,\n      });\n    this.ballImage.src = image;\n  }\n\n  //Getters\n  get width(): number {\n    return this.ballSize;\n  }\n\n  get height(): number {\n    return this.ballSize;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.ballImage;\n  }\n\n  //Methods\n  changeYDirection(): void {\n    this.speed.y = -this.speed.y;\n  }\n\n  changeXDirection(): void {\n    this.speed.x = -this.speed.x;\n  }\n\n  moveBall(): void {\n    this.pos.x = this.pos.x + this.speed.x;\n    this.pos.y = this.pos.y + this.speed.y;\n  }\n}\n","import { Vector } from '~/types';\n\nexport class Paddle {\n  private paddleImage: HTMLImageElement = new Image();\n  private moveLeft: boolean;\n  private moveRight: boolean;\n\n  constructor(\n    private speed: number,\n    private paddleWidth: number,\n    private paddleHeight: number,\n    private position: Vector,\n    image: string\n  ) {\n    this.speed = speed;\n    this.paddleWidth = paddleWidth;\n    this.paddleHeight = paddleHeight;\n    this.position = position;\n    this.moveRight = false;\n    this.moveLeft = false;\n    this.paddleImage.src = image;\n\n    //Event listeners\n\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  //GETTERS\n  get width(): number {\n    return this.paddleWidth;\n  }\n\n  get height(): number {\n    return this.paddleHeight;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n  get image(): HTMLImageElement {\n    return this.paddleImage;\n  }\n\n  get isMovingLeft(): boolean {\n    return this.moveLeft;\n  }\n  get isMovingRight(): boolean {\n    return this.moveRight;\n  }\n\n  movePaddle(): void {\n    if (this.moveLeft) this.pos.x -= this.speed;\n    if (this.moveRight) this.pos.x += this.speed;\n  }\n\n  handleKeyUp = (e: KeyboardEvent): void => {\n    if (e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = false;\n    if (e.code === 'ArrowRight' || e.key === 'ArrowRight')\n      this.moveRight = false;\n  };\n  handleKeyDown = (e: KeyboardEvent) => {\n    if (e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = true;\n    if (e.code === 'ArrowRight' || e.key === 'ArrowRight')\n      this.moveRight = true;\n  };\n}\n","//Types\nimport { Brick } from './sprites/Brick';\nimport { Paddle } from './sprites/Paddle';\nimport { Ball } from './sprites/Ball';\nimport { CanvasView } from './view/CanvasView';\n\nexport class Collision {\n  isCollidingBrick(ball: Ball, brick: Brick): boolean {\n    if (\n      ball.pos.x < brick.pos.x + brick.width &&\n      ball.pos.x + ball.width > brick.pos.x &&\n      ball.pos.y < brick.pos.y + brick.height &&\n      ball.pos.y + ball.height > brick.pos.y\n    ) {\n      return true;\n    }\n    return false;\n  }\n  //check ball Collision with bricks\n  isCollidingBricks(ball: Ball, bricks: Brick[]): boolean {\n    let colliding = false;\n    bricks.forEach((brick, i) => {\n      if (this.isCollidingBrick(ball, brick)) {\n        ball.changeYDirection();\n        if (brick.energy === 1) {\n          bricks.splice(i, 1);\n        } else {\n          brick.energy -= 1;\n        }\n        colliding = true;\n      }\n    });\n    return colliding;\n  }\n\n  checkBallCollision(ball: Ball, paddle: Paddle, view: CanvasView): void {\n    //Check ball collision with paddle\n    if (\n      ball.pos.x + ball.width > paddle.pos.x &&\n      ball.pos.x < paddle.pos.x + paddle.width &&\n      ball.pos.y + ball.height === paddle.pos.y\n    ) {\n      ball.changeYDirection();\n    }\n\n    //Check ball collision with walls\n    if (ball.pos.x > view.canvas.width - ball.width || ball.pos.x < 0) {\n      ball.changeXDirection();\n    }\n\n    //Ball movement Y constraits\n    if (ball.pos.y < 0) {\n      ball.changeYDirection();\n    }\n  }\n}\n","import RED_BRICK_IMAGE from './images/brick-red.png';\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE\n};\n\nexport const BRICK_ENERGY: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3 // Purple brick\n};\n\n// prettier-ignore\nexport const LEVEL = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\n];\n","import { Vector } from '../types';\n\nexport class Brick {\n  private brickImage: HTMLImageElement = new Image();\n\n  constructor(\n    private brickWidth: number,\n    private brickHeight: number,\n    private position: Vector,\n    private brickEnergy: number,\n    image: string\n  ) {\n    this.brickWidth = brickWidth;\n    this.brickHeight = brickHeight;\n    this.position = position;\n    this.brickEnergy = brickEnergy;\n    this.brickImage.src = image;\n  }\n\n  // Getters\n  get width(): number {\n    return this.brickWidth;\n  }\n\n  get height(): number {\n    return this.brickHeight;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.brickImage;\n  }\n\n  get energy(): number {\n    return this.brickEnergy;\n  }\n\n  // Setter\n  set energy(energy: number) {\n    this.brickEnergy = energy;\n  }\n}\n","import { Brick } from './sprites/Brick';\nimport {\n  BRICK_IMAGES,\n  LEVEL,\n  STAGE_COLS,\n  STAGE_PADDING,\n  BRICK_WIDTH,\n  BRICK_HEIGHT,\n  BRICK_PADDING,\n  BRICK_ENERGY,\n} from './setup';\n\nexport function createBricks(): Brick[] {\n  return LEVEL.reduce((ack, element, i) => {\n    const row = Math.floor((i + 1) / STAGE_COLS);\n    const col = i % STAGE_COLS;\n\n    const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\n    const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\n\n    if (element === 0) return ack;\n\n    return [\n      ...ack,\n      new Brick(\n        BRICK_WIDTH,\n        BRICK_HEIGHT,\n        { x, y },\n        BRICK_ENERGY[element],\n        BRICK_IMAGES[element]\n      ),\n    ];\n  }, [] as Brick[]);\n}\n","import { CanvasView } from './view/CanvasView';\nimport { Ball } from './sprites/Ball';\nimport { Brick } from './sprites/Brick';\nimport { Paddle } from './sprites/Paddle';\nimport { Collision } from './Collision';\n//Images\n\nimport PADDLE_IMAGE from './images/paddle.png';\nimport BALL_IMAGE from './images/ball.png';\n\n//Level and Colors\nimport {\n  PADDLE_SPEED,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  PADDLE_STARTX,\n  BALL_SIZE,\n  BALL_SPEED,\n  BALL_STARTX,\n  BALL_STARTY,\n} from './setup';\n//Helpers\nimport { createBricks } from './helpers';\n\nlet gameOver = false;\nlet score = 0;\n\nfunction setGameOver(view: CanvasView) {\n  view.drawInfo('Game Over!');\n  gameOver = false;\n}\n\nfunction setGameWin(view: CanvasView) {\n  view.drawInfo('Game Won!');\n  gameOver = false;\n}\n\nfunction gameLoop(\n  view: CanvasView,\n  bricks: Brick[],\n  paddle: Paddle,\n  ball: Ball,\n  collision: Collision\n) {\n  view.clear();\n  view.drawBricks(bricks);\n  view.drawSprite(paddle);\n  view.drawSprite(ball);\n\n  //Move Ball\n  ball.moveBall();\n\n  //move paddle and checks so it won't exit the playfield\n  if (\n    (paddle.isMovingLeft && paddle.pos.x > 0) ||\n    (paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width)\n  ) {\n    paddle.movePaddle();\n  }\n  collision.checkBallCollision(ball, paddle, view);\n  const collidingBrick = collision.isCollidingBricks(ball, bricks);\n\n  if (collidingBrick) {\n    score += 1;\n    view.drawScore(score);\n  }\n  requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision));\n}\n\nfunction startGame(view: CanvasView) {\n  //reset displays\n  score = 0;\n  view.drawInfo('');\n  view.drawScore(0);\n  // create a collision instance\n  const collision = new Collision();\n  const bricks = createBricks();\n  const ball = new Ball(\n    BALL_SPEED,\n    BALL_SIZE,\n    { x: BALL_STARTX, y: BALL_STARTY },\n    BALL_IMAGE\n  );\n\n  const paddle = new Paddle(\n    PADDLE_SPEED,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    {\n      x: PADDLE_STARTX,\n      y: view.canvas.height - PADDLE_HEIGHT - 5,\n    },\n    PADDLE_IMAGE\n  );\n  gameLoop(view, bricks, paddle, ball, collision);\n}\n\n//Create a new view\nconst view = new CanvasView('#playField');\nview.initStartButton(startGame);\n"]}